- name: Creating ec2 instances and adding to the rute53 records
  hosts: localhost
  connection: local
  vars:
    img_id: "ami-09c813fb71547fc4f"
    sg_id: "sg-0d7d38fd2dd9739a0"
    zone_id: "Z04762511YRI8TCYP5ZSP"
    domain_name: "manidevops.fun"
    # instances:
    # - mysql
    # - nodejs
    # - frontend
    
  tasks:
   - name: Launch an EC2 Instance
     amazon.aws.ec2_instance:
      name: "{{ item }}"
      image_id: "{{ img_id }}" # Replace with your desired AMI ID
      instance_type: "t3.micro"
      security_group: "{{ sg_id }}" # Or security_group_ids: ["sg-0123456789abcdef0"]
     loop: "{{ instances }}"
     register: ec2_output

  #  - name: print the ec2 output 
  #    ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  #  - name: Obtaing the private IP
  #    ansible.builtin.debug:
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #    loop: "{{ ec2_output.results }}"

  #  - name: Obtaing the private IP
  #    ansible.builtin.debug:
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #    loop: "{{ ec2_output.results }}"

   - name: update rotu53 records
     community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: "{{ item.item }}.{{ domain_name }}" # mongodb.manidevops.fun
        type: "A"
        value: "{{ item.instances[0].private_ip_address }}"
        ttl: "1"
        overwrite: true
     loop: "{{ ec2_output.results }}"

   - name: update rotu53 records
     community.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: "{{ domain_name }}" # mongodb.manidevops.fun
        type: "A"
        value: "{{ item.instances[0].public_ip_address }}"
        ttl: "1"
        overwrite: true
     when: item.item == "frontend"
     loop: "{{ ec2_output.results }}"
